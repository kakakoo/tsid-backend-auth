package com.tsid.auth.exception;

import lombok.AllArgsConstructor;
import lombok.Getter;

@AllArgsConstructor
public enum ErrCode {

    SUCCESS(200, "Y2000"),

    OPENBANK_AUTH(200, "O2101"),
    OPENBANK_TOKEN_FAIL(200, "O2102"),
    OPENBANK_TRANS_CODE_ERROR(200, "O2103"),
    OPENBANK_FINTECH_NOT_EXIST(200, "O2104"),
    OPENBANK_WITHDRAW_ERROR(200, "O2105"),
    OPENBANK_DEPOSIT_ERROR(200, "O2106"),

    ACCOUNT_AUTH(200, "Y2101"),
    ACCOUNT_TRANS(200, "Y2102"),
    ACCOUNT_UPDATE_MAIN(200, "Y2103"),
    ACCOUNT_DELETE(200, "Y2104"),
    ACCOUNT_GET(200, "Y2105"),
    ACCOUNT_CONNECT(200, "Y2106"),
    ACCOUNT_DISCONNECT(200, "Y2107"),
    ACCOUNT_PARTNER_MAKE(200, "Y2108"),
    ACCOUNT_PARTNER_AUTH(200, "Y2109"),

    CALLBACK_OPENBANK_AUTH(200, "Y2201"),
    CHECK_USER(200, "Y2301"),

    PAY_CHECK(200, "Y2401"),
    PAY_APPROVAL_REQUEST(200, "Y2402"),
    PAY_APPROVAL(200, "Y2403"),
    PAY_APPROVAL_CANCEL(200, "Y2404"),
    PAY_GIVE_CHECK(200, "Y2405"),
    PAY_GIVE(200, "Y2406"),
    PAY_CANCEL(200, "Y2407"),
    PAY_CANCEL_REQUEST(200, "Y2408"),
    PAY_POINT_RETURN(200, "Y2409"),
    PAY_CANCEL_REJECT(200, "Y2410"),

    POINT_INFO(200, "Y2501"),
    POINT_REFUND(200, "Y2502"),

    FIDO_GETKEYINFO_ERROR(200, "Y2601"),

    PAY_POINT_ERROR_USE(400, "Y4101"),
    INVALID_PARAMETER(400, "Y4000"),
    PARSE_CLAIM(401, "Y4100"),
    UNAUTHORIZED(401, "Y4101"),
    FORBIDDEN(401, "Y4102"),
    GET_PRINCIPAL(401, "Y4103"),
    FORBIDDEN_TSID(401, "Y4104"),

    FORBIDDEN_USER(403, "Y4300"),

    STATE_CODE_CONFLICT(402, "Y4200"),

    INTERNAL_ERROR(500, "Y5000");

    @Getter
    private int status;
    @Getter
    private String code;
}
